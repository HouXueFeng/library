<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xapi.hou.mapper.BorrowMapper">
	<resultMap id="BaseResultMap" type="cn.xapi.hou.po.Borrow">
		<id column="borrowId" property="borrowid" jdbcType="INTEGER" />
		<result column="outTime" property="outtime" jdbcType="DATE" />
		<result column="inTime" property="intime" jdbcType="DATE" />
		<result column="callNO" property="callno" jdbcType="INTEGER" />
		<result column="readerNO" property="readerno" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		borrowId, outTime, inTime, callNO, readerNO
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="cn.xapi.hou.po.BorrowExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from borrow
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from borrow
		where borrowId = #{borrowid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from borrow
		where borrowId = #{borrowid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="cn.xapi.hou.po.BorrowExample">
		delete from borrow
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.xapi.hou.po.Borrow">
		insert into borrow (borrowId, outTime, inTime,
		callNO, readerNO)
		values (#{borrowid,jdbcType=INTEGER}, #{outtime,jdbcType=DATE},
		#{intime,jdbcType=DATE},
		#{callno,jdbcType=INTEGER}, #{readerno,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="cn.xapi.hou.po.Borrow">
		insert into borrow
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="borrowid != null">
				borrowId,
			</if>
			<if test="outtime != null">
				outTime,
			</if>
			<if test="intime != null">
				inTime,
			</if>
			<if test="callno != null">
				callNO,
			</if>
			<if test="readerno != null">
				readerNO,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="borrowid != null">
				#{borrowid,jdbcType=INTEGER},
			</if>
			<if test="outtime != null">
				#{outtime,jdbcType=DATE},
			</if>
			<if test="intime != null">
				#{intime,jdbcType=DATE},
			</if>
			<if test="callno != null">
				#{callno,jdbcType=INTEGER},
			</if>
			<if test="readerno != null">
				#{readerno,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="cn.xapi.hou.po.BorrowExample"
		resultType="java.lang.Integer">
		select count(*) from borrow
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update borrow
		<set>
			<if test="record.borrowid != null">
				borrowId = #{record.borrowid,jdbcType=INTEGER},
			</if>
			<if test="record.outtime != null">
				outTime = #{record.outtime,jdbcType=DATE},
			</if>
			<if test="record.intime != null">
				inTime = #{record.intime,jdbcType=DATE},
			</if>
			<if test="record.callno != null">
				callNO = #{record.callno,jdbcType=INTEGER},
			</if>
			<if test="record.readerno != null">
				readerNO = #{record.readerno,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update borrow
		set borrowId = #{record.borrowid,jdbcType=INTEGER},
		outTime = #{record.outtime,jdbcType=DATE},
		inTime = #{record.intime,jdbcType=DATE},
		callNO = #{record.callno,jdbcType=INTEGER},
		readerNO = #{record.readerno,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.xapi.hou.po.Borrow">
		update borrow
		<set>
			<if test="outtime != null">
				outTime = #{outtime,jdbcType=DATE},
			</if>
			<if test="intime != null">
				inTime = #{intime,jdbcType=DATE},
			</if>
			<if test="callno != null">
				callNO = #{callno,jdbcType=INTEGER},
			</if>
			<if test="readerno != null">
				readerNO = #{readerno,jdbcType=INTEGER},
			</if>
		</set>
		where borrowId = #{borrowid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.xapi.hou.po.Borrow">
		update borrow
		set outTime = #{outtime,jdbcType=DATE},
		inTime = #{intime,jdbcType=DATE},
		callNO = #{callno,jdbcType=INTEGER},
		readerNO = #{readerno,jdbcType=INTEGER}
		where borrowId = #{borrowid,jdbcType=INTEGER}
	</update>

	<select id="selectIsNotOutbook" parameterType="hashmap"
		resultType="int">
		SELECT COUNT(*) borrow FROM borrow where callNO=#{callno} and
		readerNO=#{readno}
	</select>
	<insert id="yuyueBook" parameterType="map">
	insert INTO borrow (callNO,readerNo,outTime,inTime)VALUES(#{yuyuebookno},#{yuyueUserNo},#{intime},#{outtime})
	</insert>
</mapper>